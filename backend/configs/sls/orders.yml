Resources:
  OrdersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:service}-${opt:stage, self:provider.stage}-orders
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: false
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      AttributeDefinitions:
        - AttributeName: Owner
          AttributeType: S
        - AttributeName: ID
          AttributeType: S
        - AttributeName: Notary
          AttributeType: S
      KeySchema:
        - AttributeName: Owner
          KeyType: HASH
        - AttributeName: ID
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: ByNotary
          KeySchema:
          - AttributeName: Notary
            KeyType: HASH
          - AttributeName: ID
            KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: ByID
          KeySchema:
          - AttributeName: ID
            KeyType: HASH
          Projection:
            ProjectionType: ALL

  # OrdersTableUpdate:
  #   Type: AWS::Lambda::EventSourceMapping
  #   Properties:
  #     BatchSize: 100
  #     MaximumRetryAttempts: 0
  #     EventSourceArn:
  #       Fn::GetAtt:
  #         - OrdersTable
  #         - StreamArn
  #     FunctionName: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:service}-${opt:stage, self:provider.stage}-ordersOnChange
  #     StartingPosition: TRIM_HORIZON
  #     Enabled: True

  OrdersPrivateBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:service}-${opt:stage, self:provider.stage}-orders
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedOrigins: ['*']
            AllowedMethods: [PUT, GET, HEAD]
